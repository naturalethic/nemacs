{
    "name": "nemacs",
    "displayName": "nemacs",
    "description": "Minimal emacs keys extension for VSCode with better mark/region support",
    "version": "1.1.2",
    "repository": {
        "type": "git",
        "url": "https://github.com/naturalethic/nemacs.git"
    },
    "icon": "icon.png",
    "publisher": "naturalethic",
    "engines": {
        "vscode": "^1.75.1"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "*"
    ],
    "extensionKind": [
        "ui",
        "workspace"
    ],
    "main": "./out/main.js",
    "contributes": {
        "keybindings": [
            {
                "key": "ctrl+x ctrl+f",
                "command": "workbench.action.files.openFileFolder"
            },
            {
                "key": "ctrl+x ctrl+s",
                "command": "workbench.action.files.save"
            },
            {
                "key": "ctrl+x s",
                "command": "workbench.action.files.saveAll"
            },
            {
                "key": "ctrl+x b",
                "command": "workbench.action.quickOpen"
            },
            {
                "key": "ctrl+a",
                "command": "nemacs.cursorHome",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+e",
                "command": "nemacs.cursorEnd",
                "when": "editorTextFocus"
            },
            {
                "key": "cmd+f",
                "command": "cursorWordRight",
                "when": "editorTextFocus"
            },
            {
                "key": "cmd+b",
                "command": "cursorWordLeft",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+v",
                "command": "nemacs.cursorPageDown",
                "when": "editorTextFocus"
            },
            {
                "key": "cmd+v",
                "command": "nemacs.cursorPageUp",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+space",
                "command": "nemacs.mark",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+g",
                "command": "nemacs.cancelSelection"
            },
            {
                "key": "ctrl+g",
                "command": "closePeekDeclarationEditor",
                "when": "editorFocus && inInnerEditor"
            },
            {
                "key": "ctrl+g",
                "command": "closeReferenceSearchEditor",
                "when": "editorFocus && inInnerEditor"
            },
            {
                "key": "ctrl+g",
                "command": "removeSecondaryCursors",
                "when": "editorTextFocus && editorHasMultipleSelections"
            },
            {
                "key": "ctrl+g",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+g",
                "command": "leaveChangeAllMode",
                "when": "editorTextFocus && inChangeAllMode"
            },
            {
                "key": "ctrl+g",
                "command": "leaveSnippet",
                "when": "editorTextFocus && inSnippetMode"
            },
            {
                "key": "ctrl+g",
                "command": "closeMarkersNavigation",
                "when": "editorFocus && markersNavigationVisible"
            },
            {
                "key": "ctrl+g",
                "command": "closePeekDeclaration",
                "when": "editorFocus && peekDeclarationVisible"
            },
            {
                "key": "ctrl+g",
                "command": "closeReferenceSearch",
                "when": "editorFocus && referenceSearchVisible"
            },
            {
                "key": "ctrl+g",
                "command": "closeParameterHints",
                "when": "editorTextFocus && parameterHintsVisible"
            },
            {
                "key": "ctrl+g",
                "command": "closeQuickFixWidget",
                "when": "editorFocus && quickFixWidgetVisible"
            },
            {
                "key": "ctrl+g",
                "command": "hideSuggestWidget",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "key": "ctrl+g",
                "command": "cancelRenameInput",
                "when": "editorFocus && renameInputVisible"
            },
            {
                "key": "ctrl+g",
                "command": "workbench.action.closeMessages",
                "when": "globalMessageVisible"
            },
            {
                "key": "ctrl+/",
                "command": "undo",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+cmd+/",
                "command": "redo",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+f",
                "command": "nemacs.cursorRight",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+b",
                "command": "nemacs.cursorLeft",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+n",
                "command": "nemacs.cursorDown",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+p",
                "command": "workbench.action.quickOpenNavigatePrevious",
                "when": "inQuickOpen"
            },
            {
                "key": "ctrl+n",
                "command": "workbench.action.quickOpenNavigateNext",
                "when": "inQuickOpen"
            },
            {
                "key": "ctrl+d",
                "command": "deleteRight",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+h",
                "command": "deleteLeft",
                "when": "editorTextFocus"
            },
            {
                "key": "cmd+d",
                "command": "nemacs.deleteWordRight",
                "when": "editorTextFocus"
            },
            {
                "key": "cmd+h",
                "command": "deleteWordLeft",
                "when": "editorTextFocus"
            },
            {
                "key": "cmd+w",
                "command": "nemacs.copy",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+w",
                "command": "editor.action.clipboardCutAction",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+y",
                "command": "nemacs.yank",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+p",
                "command": "nemacs.cursorUp",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+n",
                "command": "showNextParameterHint",
                "when": "editorTextFocus && parameterHintsVisible"
            },
            {
                "key": "ctrl+p",
                "command": "showPrevParameterHint",
                "when": "editorTextFocus && parameterHintsVisible"
            },
            {
                "key": "ctrl+v",
                "command": "selectNextPageQuickFix",
                "when": "editorFocus && quickFixWidgetVisible"
            },
            {
                "key": "ctrl+n",
                "command": "selectNextQuickFix",
                "when": "editorFocus && quickFixWidgetVisible"
            },
            {
                "key": "cmd+v",
                "command": "selectPrevPageQuickFix",
                "when": "editorFocus && quickFixWidgetVisible"
            },
            {
                "key": "ctrl+p",
                "command": "selectPrevQuickFix",
                "when": "editorFocus && quickFixWidgetVisible"
            },
            {
                "key": "ctrl+v",
                "command": "selectNextPageSuggestion",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "key": "ctrl+n",
                "command": "selectNextSuggestion",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "key": "cmd+v",
                "command": "selectPrevPageSuggestion",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "key": "ctrl+p",
                "command": "selectPrevSuggestion",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "key": "ctrl+s",
                "command": "actions.find",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+s",
                "command": "editor.action.nextMatchFindAction",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+r",
                "command": "actions.find",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+r",
                "command": "editor.action.previousMatchFindAction",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "cmd+shift+5",
                "command": "editor.action.startFindReplaceAction",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+/",
                "command": "undo",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+cmd+/",
                "command": "redo",
                "when": "editorTextFocus"
            },
            {
                "key": "cmd+;",
                "command": "editor.action.commentLine",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+k",
                "command": "nemacs.killLine",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+l",
                "command": "nemacs.centerVertically",
                "when": "editorTextFocus"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run build-base -- --minify",
        "build": "npm run build-base -- --sourcemap",
        "build-base": "esbuild ./src/main.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
        "build-watch": "npm run build-base -- --sourcemap --watch"
    },
    "devDependencies": {
        "@types/node": "^18.14.1",
        "@types/vscode": "^1.75.1",
        "esbuild": "^0.17.10"
    }
}
